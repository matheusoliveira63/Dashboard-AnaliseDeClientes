# -*- coding: utf-8 -*-
from collections import Counter
import pandas as pd

def gerar_insights(dados):
    """
    Gera insights estrat√©gicos a partir dos dados dos clientes.
    Retorna uma lista de strings formatadas para exibi√ß√£o no dashboard.
    """
    insights = []
    
    # Verifica se h√° dados v√°lidos
    if dados.empty or not isinstance(dados, pd.DataFrame):
        return ["‚ö†Ô∏è Nenhum dado v√°lido encontrado"]
    
    try:
        # --- AN√ÅLISE DEMOGR√ÅFICA ---
        if 'sexo' in dados.columns:
            contagem_sexo = dados['sexo'].value_counts(normalize=True) * 100
            for sexo, percentual in contagem_sexo.items():
                insights.append(f"üë• {sexo}: {percentual:.1f}%")
        
        # --- TOP BAIRROS ---
        if 'bairro' in dados.columns:
            top_bairros = dados['bairro'].value_counts().head(3)
            insights.append("\nüèòÔ∏è **Top Bairros:**")
            for bairro, quantidade in top_bairros.items():
                insights.append(f"‚Ä¢ {bairro}: {quantidade} clientes")
        
        # --- ITENS MAIS POPULARES ---
        if 'itens_higienizados' in dados.columns:
            itens = dados['itens_higienizados'].value_counts().head(3)
            if not itens.empty:
                insights.append("\nüßº **Itens Mais Higienizados:**")
                for item, quantidade in itens.items():
                    insights.append(f"‚Ä¢ {item}: {quantidade}x")
        
        if 'itens_impermeabilizados' in dados.columns:
            itens = dados['itens_impermeabilizados'].value_counts().head(3)
            if not itens.empty:
                insights.append("\nüõ°Ô∏è **Itens Mais Impermeabilizados:**")
                for item, quantidade in itens.items():
                    insights.append(f"‚Ä¢ {item}: {quantidade}x")
        
        # --- AN√ÅLISE FINANCEIRA ---
        if 'valor_servico' in dados.columns:
            media = dados['valor_servico'].mean()
            maximo = dados['valor_servico'].max()
            minimo = dados['valor_servico'].min()
            
            # Formata√ß√£o profissional para BRL (Real Brasileiro)
            def formatar_moeda(valor):
                return f"R$ {valor:,.2f}".replace(",", "X").replace(".", ",").replace("X", ".")
            
            insights.append("\nüí∞ **An√°lise Financeira:**")
            insights.append(f"‚Ä¢ Valor m√©dio: {formatar_moeda(media)}")
            insights.append(f"‚Ä¢ Ticket m√°ximo: {formatar_moeda(maximo)}")
            insights.append(f"‚Ä¢ Ticket m√≠nimo: {formatar_moeda(minimo)}")
        
        # --- SUGEST√ïES DE CAMPANHA ---
        insights.append("\nüìà **Sugest√µes para Tr√°fego Pago:**")
        
        if 'sexo' in dados.columns and len(dados['sexo'].unique()) > 1:
            sexo_maioria = dados['sexo'].mode()[0]
            insights.append(f"‚Ä¢ Segmentar an√∫ncios para p√∫blico {sexo_maioria}")
        
        if 'bairro' in dados.columns:
            bairro_top = dados['bairro'].mode()[0]
            insights.append(f"‚Ä¢ Geotargeting em {bairro_top} e arredores")
        
        if 'itens_higienizados' in dados.columns:
            item_top = dados['itens_higienizados'].mode()[0]
            insights.append(f"‚Ä¢ Destaque promo√ß√µes para {item_top}")
    
    except Exception as e:
        insights.append(f"\n‚ö†Ô∏è Erro na an√°lise: {str(e)}")
    
    return insights


# Teste local (execute com `python insights.py`)
if __name__ == "__main__":
    # Dados de exemplo para teste
    dados_teste = pd.DataFrame({
        'sexo': ['M', 'F', 'M', 'M'],
        'bairro': ['Centro', 'Vila Ol√≠mpia', 'Centro', 'Moema'],
        'itens_higienizados': ['Sof√°', 'Cadeira', 'Sof√°', 'Poltrona'],
        'itens_impermeabilizados': ['Sof√°', '', 'Sof√°', 'Cadeira'],
        'valor_servico': [350.50, 420.0, 380.25, 500.75]
    })
    
    print("=== TESTE DE INSIGHTS ===")
    for insight in gerar_insights(dados_teste):
        print(insight)